{"remainingRequest":"/home/vj/Desktop/sample/client/node_modules/babel-loader/lib/index.js!/home/vj/Desktop/sample/client/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/vj/Desktop/sample/client/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/vj/Desktop/sample/client/src/views/mapContainer.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/vj/Desktop/sample/client/src/views/mapContainer.vue","mtime":1625210985269},{"path":"/home/vj/Desktop/sample/client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/vj/Desktop/sample/client/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/vj/Desktop/sample/client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/vj/Desktop/sample/client/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9hc3luY1RvR2VuZXJhdG9yIGZyb20gIi9ob21lL3ZqL0Rlc2t0b3Avc2FtcGxlL2NsaWVudC9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vYXN5bmNUb0dlbmVyYXRvciI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LmNvbmNhdC5qcyI7CmltcG9ydCAicmVnZW5lcmF0b3ItcnVudGltZS9ydW50aW1lLmpzIjsKLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KaW1wb3J0ICJvbC9vbC5jc3MiOwppbXBvcnQgTWFwIGZyb20gIm9sL01hcCI7CmltcG9ydCBYWVogZnJvbSAnb2wvc291cmNlL1hZWic7CmltcG9ydCBWaWV3IGZyb20gIm9sL1ZpZXciOwppbXBvcnQgKiBhcyBwcm9qIGZyb20gJ29sL3Byb2onOyAvLyBpbXBvcnQgeyBkZWZhdWx0cyBhcyBkZWZhdWx0Q29udHJvbHMsIFNjYWxlTGluZSB9IGZyb20gIm9sL2NvbnRyb2wiOwoKaW1wb3J0IHsgVGlsZSBhcyBUaWxlTGF5ZXIgfSBmcm9tICdvbC9sYXllcic7CmltcG9ydCB7IE9TTSB9IGZyb20gJ29sL3NvdXJjZSc7IC8vIGltcG9ydCBMYXllckdyb3VwIGZyb20gJ29sL2xheWVyL0dyb3VwJzsKCmV4cG9ydCBkZWZhdWx0IHsKICBtb3VudGVkOiBmdW5jdGlvbiBtb3VudGVkKCkgewogICAgdmFyIF90aGlzID0gdGhpczsKCiAgICByZXR1cm4gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlKCkgewogICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZSQoX2NvbnRleHQpIHsKICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgc3dpdGNoIChfY29udGV4dC5wcmV2ID0gX2NvbnRleHQubmV4dCkgewogICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDI7CiAgICAgICAgICAgICAgcmV0dXJuIF90aGlzLmluaXRpYXRlTWFwKCk7CgogICAgICAgICAgICBjYXNlIDI6CiAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0LnN0b3AoKTsKICAgICAgICAgIH0KICAgICAgICB9CiAgICAgIH0sIF9jYWxsZWUpOwogICAgfSkpKCk7CiAgfSwKICBkYXRhOiBmdW5jdGlvbiBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgbGF0aXR1ZGU6IHRoaXMubGF0aXR1ZGUsCiAgICAgIGxvbmdpdHVkZTogdGhpcy5sb25naXR1ZGUKICAgIH07CiAgfSwKICBtZXRob2RzOiB7CiAgICBpbml0aWF0ZU1hcDogZnVuY3Rpb24gaW5pdGlhdGVNYXAoKSB7CiAgICAgIHZhciBleHRlbnQgPSBwcm9qLnRyYW5zZm9ybUV4dGVudChbLTEuNDc3MzQ0NjIsIDUwLjg4Mjc2NDc0LCAtMS4zODcxOTA1OCwgNTAuOTIxNzU4MTRdLCAnRVBTRzo0MzI2JywgJ0VQU0c6Mzg1NycpOwogICAgICB2YXIgY2VudGVyID0gcHJvai50cmFuc2Zvcm0oWy0xLjQzMjI2NzYsIDUwLjkwMjI2MTQ0XSwgJ0VQU0c6NDMyNicsICdFUFNHOjM4NTcnKTsKICAgICAgdmFyIHZpZXcgPSBuZXcgVmlldyh7CiAgICAgICAgcHJvamVjdGlvbjogJ0VQU0c6Mzg1NycsCiAgICAgICAgY2VudGVyOiBjZW50ZXIsCiAgICAgICAgem9vbTogMTEKICAgICAgfSk7CiAgICAgIHZhciBiYXNlTGF5ZXIgPSBuZXcgVGlsZUxheWVyKHsKICAgICAgICBzb3VyY2U6IG5ldyBYWVooewogICAgICAgICAgdXJsczogWydodHRwczovL2Flcm9keW5lLWFicHYyLnMzLmV1LXdlc3QtMi5hbWF6b25hd3MuY29tL01hcHRpbGVyL1NvdXRoYW1wdG9uL1NvdXRoYW1wdG9uJTIwRGlnaXRhbCUyMFR3aW4ve3p9L3t4fS97eX0ucG5nJ10sCiAgICAgICAgICBiYXNlTGF5ZXI6IHRydWUsCiAgICAgICAgICBtaW5ab29tOiAxMSwKICAgICAgICAgIG1heFpvb206IDIyLAogICAgICAgICAgdGlsZVBpeGVsUmF0aW86IDEuMDAwMDAwCiAgICAgICAgfSkKICAgICAgfSk7IC8vIGNyZWF0ZSBtYXAgCgogICAgICB2YXIgbWFwID0gbmV3IE1hcCh7CiAgICAgICAgbGF5ZXJzOiBbbmV3IFRpbGVMYXllcih7CiAgICAgICAgICBzb3VyY2U6IG5ldyBPU00oKQogICAgICAgIH0pLCBiYXNlTGF5ZXJdLAogICAgICAgIHRhcmdldDogIm1hcCIsCiAgICAgICAgcmVuZGVyZXI6ICdjYW52YXMnLAogICAgICAgIHZpZXc6IHZpZXcKICAgICAgfSk7CiAgICAgIHZpZXcuZml0KGV4dGVudCwgbWFwLmdldFNpemUoKSk7CiAgICAgIG1hcC5vbignY2xpY2snLCBmdW5jdGlvbiAoZXZ0KSB7CiAgICAgICAgdmFyIGNvb3JkaW5hdGVzID0gZXZ0LmNvb3JkaW5hdGU7CiAgICAgICAgdmFyIGxhdGl0dWRlID0gY29vcmRpbmF0ZXNbMF07CiAgICAgICAgdmFyIGxvbmdpdHVkZSA9IGNvb3JkaW5hdGVzWzFdOwogICAgICAgIGFsZXJ0KCJsYXRpdHVkZSIuY29uY2F0KGxhdGl0dWRlLCAiIGxvbmdpdHVkZSIpLmNvbmNhdChsb25naXR1ZGUpKTsgLy8gY29uc29sZS5sb2coYCR7bGF0fSwke2xvbmd9YCkKICAgICAgfSk7CiAgICB9CiAgfQp9Ow=="},{"version":3,"sources":["mapContainer.vue"],"names":[],"mappings":";;;;;;;;;;;;AAUA,OAAA,WAAA;AACA,OAAA,GAAA,MAAA,QAAA;AACA,OAAA,GAAA,MAAA,eAAA;AACA,OAAA,IAAA,MAAA,SAAA;AACA,OAAA,KAAA,IAAA,MAAA,SAAA,C,CACA;;AACA,SAAA,IAAA,IAAA,SAAA,QAAA,UAAA;AACA,SAAA,GAAA,QAAA,WAAA,C,CACA;;AACA,eAAA;AACA,EAAA,OADA,qBACA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACA,KAAA,CAAA,WAAA,EADA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA,GAHA;AAIA,EAAA,IAJA,kBAIA;AACA,WAAA;AACA,MAAA,QAAA,EAAA,KAAA,QADA;AAEA,MAAA,SAAA,EAAA,KAAA;AAFA,KAAA;AAIA,GATA;AAUA,EAAA,OAAA,EAAA;AACA,IAAA,WADA,yBACA;AAEA,UAAA,MAAA,GAAA,IAAA,CAAA,eAAA,CAAA,CAAA,CAAA,UAAA,EAAA,WAAA,EAAA,CAAA,UAAA,EAAA,WAAA,CAAA,EACA,WADA,EACA,WADA,CAAA;AAEA,UAAA,MAAA,GAAA,IAAA,CAAA,SAAA,CAAA,CAAA,CAAA,SAAA,EAAA,WAAA,CAAA,EACA,WADA,EACA,WADA,CAAA;AAGA,UAAA,IAAA,GAAA,IAAA,IAAA,CAAA;AACA,QAAA,UAAA,EAAA,WADA;AAEA,QAAA,MAAA,EAAA,MAFA;AAGA,QAAA,IAAA,EAAA;AAHA,OAAA,CAAA;AAMA,UAAA,SAAA,GAAA,IAAA,SAAA,CAAA;AACA,QAAA,MAAA,EAAA,IAAA,GAAA,CAAA;AACA,UAAA,IAAA,EAAA,CAAA,qHAAA,CADA;AAIA,UAAA,SAAA,EAAA,IAJA;AAKA,UAAA,OAAA,EAAA,EALA;AAMA,UAAA,OAAA,EAAA,EANA;AAOA,UAAA,cAAA,EAAA;AAPA,SAAA;AADA,OAAA,CAAA,CAbA,CAwBA;;AACA,UAAA,GAAA,GAAA,IAAA,GAAA,CAAA;AACA,QAAA,MAAA,EAAA,CACA,IAAA,SAAA,CAAA;AACA,UAAA,MAAA,EAAA,IAAA,GAAA;AADA,SAAA,CADA,EAGA,SAHA,CADA;AAMA,QAAA,MAAA,EAAA,KANA;AAOA,QAAA,QAAA,EAAA,QAPA;AAQA,QAAA,IAAA,EAAA;AARA,OAAA,CAAA;AAUA,MAAA,IAAA,CAAA,GAAA,CAAA,MAAA,EAAA,GAAA,CAAA,OAAA,EAAA;AAEA,MAAA,GAAA,CAAA,EAAA,CAAA,OAAA,EAAA,UAAA,GAAA,EAAA;AACA,YAAA,WAAA,GAAA,GAAA,CAAA,UAAA;AACA,YAAA,QAAA,GAAA,WAAA,CAAA,CAAA,CAAA;AACA,YAAA,SAAA,GAAA,WAAA,CAAA,CAAA,CAAA;AAEA,QAAA,KAAA,mBAAA,QAAA,uBAAA,SAAA,EAAA,CALA,CAMA;AACA,OAPA;AASA;AA/CA;AAVA,CAAA","sourcesContent":["<template>\n  <div id=\"app\">\n    <div id=\"map\">\n  </div>\n  </div>\n\n</template>\n\n\n <script>\nimport \"ol/ol.css\";\nimport Map from \"ol/Map\";\nimport XYZ from 'ol/source/XYZ';\nimport View from \"ol/View\";\nimport * as proj from 'ol/proj';\n// import { defaults as defaultControls, ScaleLine } from \"ol/control\";\nimport {Tile as TileLayer} from 'ol/layer';\nimport {OSM} from 'ol/source';\n// import LayerGroup from 'ol/layer/Group';\nexport default {\n  async mounted() {\n    await this.initiateMap();\n  },\n  data(){\n    return{\n      latitude: this.latitude,\n      longitude: this.longitude\n    };\n  },\n  methods: {\n    initiateMap() {\n\n      var extent = proj.transformExtent([-1.47734462,50.88276474,-1.38719058,50.92175814],\n                                     'EPSG:4326', 'EPSG:3857');\n      var center = proj.transform([-1.4322676, 50.90226144],\n                                     'EPSG:4326', 'EPSG:3857');\n      \n      var view = new View({\n        projection: 'EPSG:3857',\n        center: center,\n        zoom: 11\n      });\n    \n    var baseLayer = new TileLayer({\n        source: new XYZ({\n          urls:['https://aerodyne-abpv2.s3.eu-west-2.amazonaws.com/Maptiler/Southampton/Southampton%20Digital%20Twin/{z}/{x}/{y}.png'\n              ],\n          \n          baseLayer: true,\n          minZoom: 11,\n          maxZoom: 22,\n          tilePixelRatio: 1.000000\n        })\n      });\n      // create map \n      var map = new Map({\n        layers: [\n          new TileLayer({\n            source: new OSM()\n          }),baseLayer\n        ],\n        target: \"map\",\n        renderer: 'canvas',\n        view: view\n      });\n      view.fit(extent, map.getSize());\n\n       map.on('click', function(evt) {\n         var coordinates = evt.coordinate;\n         let latitude = coordinates[0];\n         let longitude = coordinates[1];\n         \n         alert(`latitude${latitude} longitude${longitude}`)\n        // console.log(`${lat},${long}`)\n    });\n\n    },\n  },\n};\n </script>\n<style>\n#map {\n  position: absolute;\n  margin: 0;\n  padding: 0;\n  height: 500px;\n  width: 70%;\n}\n#app {\n  font-family: Avenir, Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-align: center;\n  color: #2c3e50;\n}\n#nav {\n  padding: 30px;\n}\n#nav a {\n  font-weight: bold;\n  color: #2c3e50;\n}\n#nav a.router-link-exact-active {\n  color: #42b983;\n}\n\n.coordinates{\n  border-radius: 0;\n  padding: 10px;\n  margin-bottom: 10px;\n}\n</style>\n\n\n\n\n\n"],"sourceRoot":"src/views"}]}